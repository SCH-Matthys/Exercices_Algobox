Exercice 1 : 

1.Boucle croissante
Affichez dans l'ordre croissant les 25 premiers entiers (dans cet algorithme, nous incluons la valeur
0)

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
POUR X ALLANT_DE 0 A 25
	DEBUT_POUR
	AFFICHER X
	AFFICHER " "
	FIN_POUR
FIN_ALGORITHME


Exercice 1 BIS :

1.Boucle croissante bis
Refaites l'exercice précédent en utilisant une boucle TANT_QUE

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	TANT_QUE (X < 26) FAIRE
		DEBUT_TANT_QUE
		AFFICHER X
		AFFICHER " "
		X PREND_LA_VALEUR X + 1
		FIN_TANT_QUE
FIN_ALGORITHME


Exercice 2 :

2.Boucle décroissante
Affichez dans l'ordre décroissant les 25 premiers entiers (dans cet algorithme, nous n'incluons pas
la valeur 0).

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
X PREND_LA_VALEUR 25
	TANT_QUE (X != 0) FAIRE
		DEBUT_TANT_QUE
		AFFICHER X
		AFFICHER " "
		X PREND_LA_VALEUR X - 1
		FIN_TANT_QUE
FIN_ALGORITHME


Exercice 3 :

3.intervertion
Faire un algorithme permetant d'intervertir 2 contenus de 2 variables

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
Y EST_DU_TYPE NOMBRE

DEBUT_ALGORITHME
X PREND_LA_VALEUR 25
Y PREND_LA_VALEUR 5
AFFICHER X
AFFICHER " et "
AFFICHER Y
AFFICHER " "
AFFICHER "Devienent : "
TANT_QUE (Y < 25) FAIRE
	DEBUT_TANT_QUE
	X PREND_LA_VALEUR X -1
	Y PREND_LA_VALEUR Y+1
	FIN_TANT_QUE
AFFICHER Y
AFFICHER " et "
AFFICHER X
FIN_ALGORITHME


Exercice 4 :

4.pyramide
Exemple d’utilisation d’une boucle for {...} afin d’afficher le motif suivant :
1
1 2
1 2 3
1 2 3 4
:
1 2 3 4 .. 25

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
Y EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
POUR Y ALLANT_DE 0 A 25
	DEBUT_POUR
POUR X ALLANT_DE 0 A Y
	DEBUT_POUR
	AFFICHER X
	AFFICHER " " 
	FIN_POUR
	AFFICHER* " "
	FIN_POUR
FIN_ALGORITHME


Exercice 5 : 

5.Somme multiple
Ecrire l'algorithme qui calcule la somme des 30 premiers entiers (privés de
l’entier 0), c'est-à-dire 1+2+3+4+...+28+29+30.


FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
Y EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
POUR X ALLANT_DE 0 A 30
	DEBUT_POUR
		Y PREND_LA_VALEUR Y + X
	FIN_POUR
		AFFICHER Y
FIN_ALGORITHME


Exercice 5 BIS :

5-bis.Somme multiple personnalisé
Utilisez l'exercice précédent afin de laisser l'utilisateur choisir le nombre à calculer


FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
Y EST_DU_TYPE NOMBRE
N EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
LIRE N
POUR X ALLANT_DE 0 A N
	DEBUT_POUR
		Y PREND_LA_VALEUR Y + X
	FIN_POUR
		AFFICHER Y
FIN_ALGORITHME



Exercice 6 : 

6.Fontion pair
Faire une programme qui vérifie si le nombre d'un utilisateur est pair

FONCTIONS_UTILISEES
VARIABLES
N EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
LIRE N
SI ((N % 2) == 0) ALORS
	DEBUT_SI
		AFFICHER N
		AFFICHER " est pair "
	FIN_SI 
	SINON	
		DEBUT_SINON
		AFFICHER N
		AFFICHER " est Impair"
		FIN_SINON
FIN_ALGORITHME

Exercice 7 :

7.Boucle pair
Utiliser le programme précédent pour afficher uniquement les nombres pair de 1 a 20

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
POUR X ALLANT_DE 1 A 20
	DEBUT_POUR
	SI ((X % 2) == 0) ALORS
	DEBUT_SI
		AFFICHER X
		AFFICHER " est pair "
		AFFICHER* " "
	FIN_SI 
	SINON	
		DEBUT_SINON
		AFFICHER* " "
		FIN_SINON
	FIN_POUR
FIN_ALGORITHME


Exercice 8 :

8.Fonction pythagore
Faire un programme qui permet de trouver l'hypothénuse d'un triangle rectange.
L'utilisateur devra rentrer les longueurs b et c

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
Y EST_DU_TYPE NOMBRE
Z EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
LIRE X
LIRE Y
Z PREND_LA_VALEUR sqrt((X * X) + (Y * Y))
AFFICHER "Z vaut : "
AFFICHER Z
FIN_ALGORITHME


Exercice 9 : 

9.Condition heure
Demandez l'heure a l'utilisateur et faire un programme qui lui dira en fonction de l'heure donnée si
c'est le matin l'après midi ou le soir

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
AFFICHER "Donner une heure entre 0 et 24"
LIRE X
SI (X > 24) ALORS
		DEBUT_SI
			AFFICHER "Heure incorrect, donner une heure entre 0 et 24"
			LIRE X
		FIN_SI
		
SI (X < 12) ALORS
		DEBUT_SI
			AFFICHER "Matin"
		FIN_SI
SI (X == 12) ALORS
		DEBUT_SI
			AFFICHER "Midi"
		FIN_SI
SI (19 > X ET X > 12) ALORS
		DEBUT_SI
			AFFICHER "Apres midi"
		FIN_SI
SI (X >= 19) ALORS
		DEBUT_SI
			AFFICHER "Soir"
		FIN_SI
FIN_ALGORITHME

Exercice 10 : 

10.FooBar
Affichez les nombres de 1 à 100, pour les multiples
de 5 vous afficherez "bar", pour les multiples de 3 vous
afficherez "foo" et pour les multiples de 3 et de 5 vous
afficherez "foobar".

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME
	POUR X ALLANT_DE 1 A 100
		DEBUT_POUR
			SI ((X % 3 == 0) ET (X % 5 ==0)) ALORS
							DEBUT_SI
							AFFICHER "foobar"
							AFFICHER* " "
							FIN_SI
			SINON
					DEBUT_SINON
						SI (X % 3 == 0) ALORS
						DEBUT_SI
						AFFICHER "foo"
						AFFICHER* " "
						FIN_SI
					SINON
						DEBUT_SINON
							SI (X % 5 == 0) ALORS
								DEBUT_SI
								AFFICHER "bar"
								AFFICHER* " "
							FIN_SI
						SINON	
							DEBUT_SINON
							AFFICHER X
							AFFICHER* " "
						FIN_SINON
					FIN_SINON
				FIN_SINON	
	FIN_POUR
FIN_ALGORITHME


Exercice 11 :

11.Table des multiplications
faire le tableau des multiplications de 0 a 9

FONCTIONS_UTILISEES
VARIABLES
X EST_DU_TYPE NOMBRE
Y EST_DU_TYPE NOMBRE
Z EST_DU_TYPE NOMBRE
DEBUT_ALGORITHME 
	POUR X ALLANT_DE 1 A 10
		DEBUT_POUR
				AFFICHER* " "
				AFFICHER "Table "
				AFFICHER X
				AFFICHER ": (de 0 à 9)"
				AFFICHER* " "
		POUR Y ALLANT_DE 0 A 9
			DEBUT_POUR
				Z PREND_LA_VALEUR X*Y
				AFFICHER Z
				AFFICHER " "
			FIN_POUR
			AFFICHER* " "
		FIN_POUR
	AFFICHER* " "
FIN_ALGORITHME